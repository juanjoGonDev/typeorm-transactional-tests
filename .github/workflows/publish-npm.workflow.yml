name: 🚀 Publish to npm

permissions:
  contents: read

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Run without publishing to npm"
        required: false
        default: "false"
        type: choice
        options:
          - "true"
          - "false"

run-name: 🚀 Publish to npm${{ github.event.inputs.dry_run == 'true' && ' (dry)' || '' }}

env:
  NODE_VERSION: ${{vars.NODE_VERSION}}
  PNPM_VERSION: ${{vars.PNPM_VERSION}}

jobs:
  release:
    if: github.actor == github.repository_owner || github.actor == 'github-actions'
    name: 🆕 Release${{ github.event.inputs.dry_run == 'true' && ' (dry)' || '' }}
    runs-on: ubuntu-latest
    environment: admin
    steps:
      - name: 📚 checkout
        uses: actions/checkout@v5
      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "${{ env.PNPM_VERSION }}"
          run_install: false
      - name: 🟢 node
        uses: actions/setup-node@v6
        with:
          node-version: "${{ env.NODE_VERSION }}"
          registry-url: "https://registry.npmjs.org/"
          cache: "pnpm"
      - name: ⚙️ pnpm install
        run: pnpm install --frozen-lockfile
      - name: 🚧 Run build
        run: pnpm build
      - name: 🧪 Install package test
        run: |
          TEST_DIR="test-install"
          mkdir "$TEST_DIR"
          pnpm pack --pack-destination "$TEST_DIR"
          cd "$TEST_DIR"
          echo '{"name":"test-package","version":"1.0.0","private":true}' > package.json
          PACKAGE_TARBALL=$(find . -maxdepth 1 -name '*.tgz' -print -quit)
          pnpm add --save-dev "$PACKAGE_TARBALL"
      - name: 🎉 Publish to npm
        if: github.event.inputs.dry_run != 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: 🚫 Skipped npm publish (dry run)
        if: github.event.inputs.dry_run == 'true'
        run: echo "🔍 Dry run is enabled, skipping npm publish."
